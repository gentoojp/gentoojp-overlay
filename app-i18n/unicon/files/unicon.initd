#!/sbin/runscript
# Copyright 1999-2006 Gentoo Foundation
# Distributed under the terms of the GNU General Public License v2

source /etc/conf.d/keymaps
source /etc/conf.d/consolefont

depend() {
	after modules
}

checkconfig() {
	if [[ -z ${KEYMAP} ]] ; then
		eerror "You need to setup KEYMAP in /etc/conf.d/keymaps first"
		return 1
	fi

	# Make sure user isn't using rc.conf anymore
	if grep -qs ^KEYMAP= /etc/rc.conf ; then
		ewarn "KEYMAP should not be set in /etc/rc.conf but in /etc/conf.d/keymaps"
	fi
}

start() {
# keymaps
	if is_uml_sys ; then
		ebegin "Loading key mappings"
		eend 0
		return 0
	fi

	local WINDOWKEYS_KEYMAP=

	checkconfig || return 1

	# Force linux keycodes for PPC.
	if [[ -f /proc/sys/dev/mac_hid/keyboard_sends_linux_keycodes ]] ; then
		echo 1 > /proc/sys/dev/mac_hid/keyboard_sends_linux_keycodes
	fi

	# Turn on unicode if user wants it
	if [[ ${UNICODE} == "yes" ]] ; then
		/usr/bin/kbd_mode -u
	fi

	ebegin "Loading key mappings"
	if [[ -x /bin/loadkeys ]] ; then
		[[ ${SET_WINDOWKEYS} == "yes" ]] && WINDOWKEYS_KEYMAP="windowkeys"
		/bin/loadkeys -q ${WINDOWKEYS_KEYMAP} ${KEYMAP} \
		                 ${EXTENDED_KEYMAPS} > /dev/null
		eend $? "Error loading key mappings"
	else
		eend 1 "/bin/loadkeys not found"
		return 1
	fi

# consolefont
	if is_uml_sys ; then
		ebegin "Setting user font"
		eend 0
		return 0
	elif [[ -z ${CONSOLEFONT} ]] ; then
		ebegin "Using the default console font"
		eend 0
		return 0
	fi

	local x=
	local param=
	local sf_param=
	local retval=1

	# Get additional parameters
	if [[ -n ${CONSOLETRANSLATION} ]] ; then
		param="-m ${CONSOLETRANSLATION}"
	fi

	# Set the console font
	local errmsg=""
	ebegin "Setting user font"
	if [[ -x /bin/setfont ]] ; then
		# We patched setfont to have --tty support ...
		if [[ -n $(setfont --help 2>&1 | grep -e '--tty') || \
		      -n $(setfont --help 2>&1 | grep -e '-C') ]]
		then
			if [[ -n $(setfont --help 2>&1 | grep -e '--tty') ]] ; then
				sf_param="--tty="
			else
				sf_param="-C "
			fi
			local ttydev=
			[[ -d /dev/vc ]] \
				&& ttydev=/dev/vc/ \
				|| ttydev=/dev/tty

			for x in $(seq 1 "${RC_TTY_NUMBER}") ; do
				/bin/setfont ${CONSOLEFONT} ${param} \
					${sf_param}/${ttydev}${x} > /dev/null
				retval=$?
			done
		else
			/bin/setfont ${CONSOLEFONT} ${param} > /dev/null
			retval=$?
		fi
		errmsg="Failed to set user font"
	else
		retval=1
		errmsg="/bin/setfont not found"
	fi
	eend ${retval} "${errmsg}"

# unicon
	ebegin "Starting unicon"
	/sbin/modprobe unikey

	if [ -n "${UNICON_ENCODE}" ] ; then
		ebegin "  Loading encode-${UNICON_ENCODE}"
		/sbin/modprobe encode-"${UNICON_ENCODE}"
		eend $?
	fi

	loadunimap /usr/lib/unicon/direct.uni

	if [ -n "${UNICON_ENCODE}" ] ; then
		for n in $(seq 1 "${RC_TTY_NUMBER}") ; do
			/usr/bin/uniconctrl --"${UNICON_ENCODE}" tty${n}
		done
	fi
	eend $?
}
