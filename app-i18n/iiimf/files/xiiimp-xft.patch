diff -ruN im-sdk-trunk-svn2174.orig/iiimxcf/xiiimp.so/configure.ac im-sdk-trunk-svn2174/iiimxcf/xiiimp.so/configure.ac
--- im-sdk-trunk-svn2174.orig/iiimxcf/xiiimp.so/configure.ac	2005-01-31 15:31:45.000000000 +0900
+++ im-sdk-trunk-svn2174/iiimxcf/xiiimp.so/configure.ac	2005-02-08 15:29:16.428257201 +0900
@@ -57,6 +57,7 @@
 IM_CHECK_DLOPEN
 IM_CHECK_X
 IM_CHECK_XUTF8API
+PKG_CHECK_MODULES(XFT, xft >= 2.0.0, have_xft=true, :)
 
 # Checks for library functions.
 #AC_FUNC_MALLOC
@@ -101,6 +102,8 @@
 AC_SUBST(XIIIMP_MAJOR_VERSION)
 AC_SUBST(XIIIMP_MINOR_VERSION)
 AC_SUBST(XIIIMP_SOX18N_VERSION)
+AC_SUBST(XFT_LIBS)
+AC_SUBST(XFT_CFLAGS)
 
 AC_OUTPUT(Makefile iiimp/Makefile)
 
diff -ruN im-sdk-trunk-svn2174.orig/iiimxcf/xiiimp.so/iiimp/Makefile.am im-sdk-trunk-svn2174/iiimxcf/xiiimp.so/iiimp/Makefile.am
--- im-sdk-trunk-svn2174.orig/iiimxcf/xiiimp.so/iiimp/Makefile.am	2005-01-31 15:31:44.000000000 +0900
+++ im-sdk-trunk-svn2174/iiimxcf/xiiimp.so/iiimp/Makefile.am	2005-02-08 15:29:16.433256547 +0900
@@ -1,7 +1,7 @@
 moduledir = $(IMDIR)
 xiiimp_la_CFLAGS = $(X_CFLAGS) -I$(X_PRIVATEINC) \
                    $(SHLIBCFLAGS) $(THREAD_CXX_CFLAGS) \
-                   -I$(CSCONV_DIR)
+                   -I$(CSCONV_DIR) $(XFT_CFLAGS)
 xiiimp_la_LDFLAGS = -rpath $(moduledir) -version-info $(XIIIMP_SOX18N_VERSION) \
                     -module -export-dynamic -no-undefined
 # On GNU/Linux system, libtool does not take care of -no-undefined so that
@@ -10,7 +10,7 @@
 xiiimp_la_LIBADD = $(X_LIBS)  \
 		   $(IM_LIBDIR)/iiimcf/libiiimcf.la \
 		   $(IM_LIBDIR)/iiimp/libiiimp.la \
-                   $(DLOPEN_LIBS) $(THREAD_LIBS)
+                   $(DLOPEN_LIBS) $(THREAD_LIBS) $(XFT_LIBS)
 xiiimp_la_SOURCES = \
 	genutil.c \
 	KeyMap.c \
diff -ruN im-sdk-trunk-svn2174.orig/iiimxcf/xiiimp.so/iiimp/guiIMLookup.c im-sdk-trunk-svn2174/iiimxcf/xiiimp.so/iiimp/guiIMLookup.c
--- im-sdk-trunk-svn2174.orig/iiimxcf/xiiimp.so/iiimp/guiIMLookup.c	2005-01-31 15:31:44.000000000 +0900
+++ im-sdk-trunk-svn2174/iiimxcf/xiiimp.so/iiimp/guiIMLookup.c	2005-02-08 15:59:16.460568926 +0900
@@ -43,6 +43,7 @@
 #include "iiimpIM.h"
 #include "iiimpColor.h"
 #include "composeIM.h"
+#include <X11/Xft/Xft.h>
 #include "guiIMLookup.h"
 #include "guiIMPre.h"
 #include "lookup.h"
@@ -59,17 +60,40 @@
 static void highlightCandidate(XicCommon ic, int, Bool highlight);
 
 static void
-DrawLookupString(Display *display, Window win, XFontSet fontset,
+DrawLookupString(XicCommon ic, Display *display, Window win, XFontSet fontset,
+                 XftDraw *xftdraw, XftColor xftcolor, XftFont *xftfont,
 		 GC gc, GC rgc, XIMFeedback feedback,
 		 int x, int y, char *str, int len) {
-  if (fontset == NULL) return;
+
+  wchar_t *wcstr = 0, *wcstrp;
+  size_t wc_len = 0;
+  int out_len;
+  XimCommon im = (XimCommon)ic->core.im;
+
+  /* need to get wchar string */
+  wc_len = len;
+  if (!(wcstr = Xmalloc(sizeof(wchar_t) * (wc_len + 1))))
+    return;
+
+  out_len = IIimpMbstoWcs(im, str, len, wcstr, wc_len, NULL); 
+  if (out_len == 0)
+    Xfree(wcstr);
+  
+  wcstrp = wcstr;
+
+  if (fontset == NULL)
+    return;
 
   if (feedback & XIMReverse) {
-    XmbDrawImageString(display, win, fontset, rgc, 
-		       x, y, str, len);
+    if ((xftdraw != NULL) && (xftfont != NULL))
+      XftDrawString32(xftdraw, &xftcolor, xftfont, x, y, (FcChar32*) wcstrp, out_len); 
+    else 
+      XmbDrawImageString(display, win, fontset, rgc, x, y, str, len);
   } else {
-    XmbDrawImageString(display, win, fontset, gc, 
-		       x, y, str, len);
+    if ((xftdraw != NULL) && (xftfont != NULL))
+      XftDrawString32(xftdraw, &xftcolor, xftfont, x, y, (FcChar32*) wcstrp, out_len);
+    else 
+      XmbDrawImageString(display, win, fontset, gc, x, y, str, len);
   }
   return;
 }
@@ -77,6 +101,7 @@
 static void
 DrawLookupString2(XicCommon ic,
 		  Display *display, Window win, XFontSet fontset,
+                  XftDraw *xftdraw, XftColor xftcolor, XftFont *xftfont,
 		  GC gc, GC rgc,
 		  int x, int y, char *str, int str_len,
 		  XIMChoiceObject2 *choice, int idx) {
@@ -115,9 +140,19 @@
     if ((0 == i) || (False == SameIMFeedbackList(pfeedback - 1, pfeedback))) {
       SetIMColors(ic, display, win, gc, (GC)0, pfeedback, (XIMFeedback)0);
     }
-    XwcDrawImageString(display, win, fontset, gc,
+    if ((xftdraw != NULL) && (xftfont != NULL)) {
+      XftDrawString32(xftdraw, &xftcolor, xftfont, x, y, (FcChar32*) wcstrp, 1);
+      XGlyphInfo extents;
+      XftTextExtents32(display,xftfont, (FcChar32*) wcstrp, 1, &extents);
+      x += extents.xOff; 
+    }
+    else {
+      XwcDrawImageString(display, win, fontset, gc,
 		       x, y, wcstrp, 1);
-    x += XwcTextEscapement(fontset, wcstrp, 1); wcstrp++;
+      x += XwcTextEscapement(fontset, wcstrp, 1); 
+    }
+    wcstrp++;
+    
   }
   Xfree(wcstr);
 
@@ -149,8 +184,18 @@
       }
     }
     SetIMColors(ic, display, win, gc, (GC)0, pfeedback, (XIMFeedback)0);
-    XwcDrawImageString(display, win, fontset, gc, x, y, wcstrp, j);
-    x = XwcTextEscapement(fontset, wcstrp, j);
+    if ((xftdraw != NULL) && (xftfont != NULL)) {
+      XftDrawString32(xftdraw, &xftcolor, xftfont, x, y, (FcChar32*) wcstrp, j);
+      XGlyphInfo extents;
+      XftTextExtents32(display,xftfont, (FcChar32*) wcstrp, j, &extents);
+      x += extents.xOff; 
+    }
+    else {
+      XwcDrawImageString(display, win, fontset, gc,
+		       x, y, wcstrp, j);
+      x += XwcTextEscapement(fontset, wcstrp, j); 
+    }
+    
     wcstrp += j;
     i += j;
   }
@@ -370,6 +415,7 @@
   int rows;
   int x = xMargin;
   int y = yMargin;
+ 
 
   if (lookup->fontset) {
     XFontSetExtents *fse;
@@ -415,15 +461,23 @@
 	lookup->candidates->label_feedback[i] &&
 	lookup->candidates->value_feedback[i]) {
       DrawLookupString2(ic, ic->core.im->core.display, lookup->window,
-			lookup->fontset, lookup->gc, lookup->rgc,
+			lookup->fontset, 
+			 lookup->xftdraw, 
+			 lookup->xftcolor, 
+			 lookup->xftfont, 
+			lookup->gc, lookup->rgc,
 			x, y, lookup->candidateArray[i],
 			strlen(lookup->candidateArray[i]),
 			lookup->candidates, i);
     } else {
       if (lookup->redraw == DRAW_NOTHING &&
 	  i == lookup->previous) {
-	DrawLookupString(ic->core.im->core.display, lookup->window,
-			 lookup->fontset, lookup->gc, lookup->rgc, 0,
+	DrawLookupString(ic, ic->core.im->core.display, lookup->window,
+			 lookup->fontset, 
+			 lookup->xftdraw, 
+			 lookup->xftcolor, 
+			 lookup->xftfont, 
+                         lookup->gc, lookup->rgc, 0,
 			 x, y, lookup->candidateArray[i],
 			 strlen(lookup->candidateArray[i]));
 	if (lookup->current != i) {
@@ -431,16 +485,24 @@
 	}
       }
       if (i == lookup->current) {
-	DrawLookupString(ic->core.im->core.display, lookup->window,
-			 lookup->fontset, lookup->gc, lookup->rgc,
+	DrawLookupString(ic, ic->core.im->core.display, lookup->window,
+			 lookup->fontset, 
+			 lookup->xftdraw, 
+			 lookup->xftcolor, 
+			 lookup->xftfont, 
+                         lookup->gc, lookup->rgc,
 			 XIMReverse,
 			 x, y, lookup->candidateArray[i],
 			 strlen(lookup->candidateArray[i]));
 	continue;
       }
       if (lookup->redraw & CONTENTS) {
-	DrawLookupString(ic->core.im->core.display, lookup->window,
-			 lookup->fontset, lookup->gc, lookup->rgc, 0,
+	DrawLookupString(ic, ic->core.im->core.display, lookup->window,
+			 lookup->fontset, 
+			 lookup->xftdraw, 
+			 lookup->xftcolor, 
+			 lookup->xftfont, 
+                         lookup->gc, lookup->rgc, 0,
 			 x, y, lookup->candidateArray[i],
 			 strlen(lookup->candidateArray[i]));
       }
@@ -629,6 +691,19 @@
 						   XIM_IIIMP(ic->core.im, default_font_name));
     lookup->need_free_fontset = True;
   }
+  if (!lookup->xftdraw) {
+    lookup->xftdraw = XftDrawCreate(display,(Drawable) win,
+                              DefaultVisual(display, DefaultScreen(display)),
+                              DefaultColormap(display, DefaultScreen(display)));
+  }
+  if (!lookup->xftfont) {
+    lookup->xftfont = XFactoryCreateDefaultXftFont(display);
+  }
+
+  lookup->xftcolor.color.red = 0;
+  lookup->xftcolor.color.blue = 0;
+  lookup->xftcolor.color.green = 0;
+  lookup->xftcolor.color.alpha = 0xffff;
 
   return True;
 }
@@ -883,6 +958,7 @@
   XIMText *value;
   XIMText *label;
   IMFeedbackList **value_flist, **label_flist;
+  Display *display = ic->core.im->core.display;
   int actual_width = 0;
 
   if (lookup->array_size == 0) {
@@ -980,9 +1056,34 @@
       strcpy(candidate, value_str);
     }
     len = strlen(candidate);
-    if (lookup->maxWidth < (cand_width = XmbTextEscapement(lookup->fontset,
+
+    /* get wchar so that we can get the right extents */
+    wchar_t *wcstr = 0, *wcstrp;
+    size_t wc_len = 0;
+    int out_len;
+    XimCommon im = (XimCommon)ic->core.im;
+
+    wc_len = len;
+    if (!(wcstr = Xmalloc(sizeof(wchar_t) * (wc_len + 1))))
+      return False;
+
+    out_len = IIimpMbstoWcs(im, candidate, len, wcstr, wc_len, NULL);
+    if (out_len == 0)
+      Xfree(wcstr);
+
+    wcstrp = wcstr;
+
+    if ((lookup->xftdraw != NULL) && (lookup->xftfont != NULL)) {
+      XGlyphInfo extents;
+      XftTextExtents32(display,lookup->xftfont, (FcChar32*) candidate, out_len, &extents);
+      if (lookup->maxWidth < extents.xOff) {
+	lookup->maxWidth = extents.xOff;
+      }
+    } else {
+      if (lookup->maxWidth < (cand_width = XmbTextEscapement(lookup->fontset,
 							   candidate, len))) {
-      lookup->maxWidth = cand_width;
+	lookup->maxWidth = cand_width;
+      }
     }
     actual_width += cand_width;
 
@@ -1117,6 +1218,14 @@
     XFactoryFreeDefaultFontSet (ic->core.im->core.display);
     lookup->need_free_fontset = False;
   }
+  if (lookup->xftdraw != NULL) { 
+    XftDrawDestroy(lookup->xftdraw);
+    lookup->xftdraw = NULL;
+  }
+  if (lookup->xftfont != NULL) {
+    XFactoryFreeDefaultXftFont(ic->core.im->core.display);
+    lookup->xftfont = NULL;
+  }
   XDestroyWindow(ic->core.im->core.display,
 		 lookup->window);
   _XUnregisterFilter(ic->core.im->core.display, lookup->window,
diff -ruN im-sdk-trunk-svn2174.orig/iiimxcf/xiiimp.so/iiimp/guiIMLookup.h im-sdk-trunk-svn2174/iiimxcf/xiiimp.so/iiimp/guiIMLookup.h
--- im-sdk-trunk-svn2174.orig/iiimxcf/xiiimp.so/iiimp/guiIMLookup.h	2005-01-31 15:31:44.000000000 +0900
+++ im-sdk-trunk-svn2174/iiimxcf/xiiimp.so/iiimp/guiIMLookup.h	2005-02-08 15:29:16.431256809 +0900
@@ -60,6 +60,9 @@
   GC		gc;
   GC		rgc;
   XFontSet	fontset;
+  XftDraw	*xftdraw;
+  XftFont	*xftfont;
+  XftColor	xftcolor;
   Bool		need_free_fontset;
   int		nrows;
   int		ncolumns;
diff -ruN im-sdk-trunk-svn2174.orig/iiimxcf/xiiimp.so/iiimp/guiIMSts.c im-sdk-trunk-svn2174/iiimxcf/xiiimp.so/iiimp/guiIMSts.c
--- im-sdk-trunk-svn2174.orig/iiimxcf/xiiimp.so/iiimp/guiIMSts.c	2005-01-31 15:31:44.000000000 +0900
+++ im-sdk-trunk-svn2174/iiimxcf/xiiimp.so/iiimp/guiIMSts.c	2005-02-08 15:46:47.125613243 +0900
@@ -96,40 +96,55 @@
 static void
 DrawStatusString(XicCommon ic,
 		 Display *display, Window win, XFontSet fontset,
+		 XftDraw *xftdraw, XftColor xftcolor, XftFont *xftfont,
 		 GC gc, int x, int y, char *str, int str_len,
 		 IMFeedbackList *feedback_list, int feedback_length) {
   if (fontset == NULL) return;
+  wchar_t *wcstr = 0, *wcstrp;
+  size_t wc_len = 0;
+  int out_len = 0;
+  XimCommon im = (XimCommon)ic->core.im;
+
+  /* need to get wchar string */
+  wc_len = str_len;
+  if (!(wcstr = Xmalloc(sizeof(wchar_t) * (wc_len + 1)))) return;
+
+  out_len = IIimpMbstoWcs(im, str, str_len, wcstr, wc_len, NULL);
+  if (out_len == 0) {
+    Xfree(wcstr);
+    goto error;
+  }
+  wcstrp = wcstr;
+
   if (feedback_list) {
     /* coloring */
     int i;
-    wchar_t *wcstr = 0, *wcstrp = NULL;
-    size_t wc_len = 0;
     IMFeedbackList *pfeedback;
-    XimCommon im = (XimCommon)ic->core.im;
-
-    /* need to get wchar string */
-    wc_len = str_len;
-    if (!(wcstr = Xmalloc(sizeof(wchar_t) * (wc_len + 1)))) return;
-
-    if (IIimpMbstoWcs(im, str, str_len, wcstr, wc_len, NULL) == 0) {
-      Xfree(wcstr);
-      goto error;
-    }
-    wcstrp = wcstr;
 
     pfeedback = feedback_list;
     for (i = 0; i < feedback_length; i++, pfeedback++) {
       /* set colors */
       SetIMColors(ic, display, win, gc, (GC)0, pfeedback, (XIMFeedback)0);
-      XwcDrawImageString(display, win, fontset, gc,
+      if ((xftdraw != NULL) && (xftfont != NULL)){
+	XftDrawString32(xftdraw, &xftcolor, xftfont, x, y, (FcChar32*) wcstrp, 1);
+	XGlyphInfo extents;
+	XftTextExtents32(display,xftfont, (FcChar32*) wcstrp, 1, &extents);
+	x += extents.xOff;
+      }
+      else {
+	XwcDrawImageString(display, win, fontset, gc,
 			 x, y, wcstrp, 1);
-      x += XwcTextEscapement(fontset, wcstrp, 1); wcstrp++;
+	x += XwcTextEscapement(fontset, wcstrp, 1); wcstrp++;
+      }
     }
     Xfree(wcstr);
     return;
   }
  error:
-  XmbDrawString(display, win, fontset, gc, x, y, str, str_len);
+  if ((xftdraw != NULL) && (xftfont != NULL))
+    XftDrawString32(xftdraw, &xftcolor, xftfont, x, y, (FcChar32*) wcstrp, out_len);
+  else
+    XmbDrawString(display, win, fontset, gc, x, y, str, str_len);
 }
 
 #if defined(USE_FILTER_KEY_PRESS_IN_STATUS)
@@ -257,6 +272,9 @@
   DrawStatusString(ic, ic->core.im->core.display,
 		   status->window,
 		   status->fontset,
+                   status->xftdraw,
+                   status->xftcolor,
+                   status->xftfont,
 		   status->gc, status->x, status->y,
 		   status_string, len,
 		   status->feedback, status->text.length);
@@ -486,7 +504,7 @@
   StatusWin status = (StatusWin)(ic->gui_icpart->status);
 
   if (!status) return;  /* Let's do it later */
-
+  
   if (ic->core.status_attr.fontset) {
     if (status->fontset && status->need_free_fontset) {
       XFactoryFreeDefaultFontSet (ic->core.im->core.display);
@@ -501,6 +519,22 @@
 						   XIM_IIIMP (ic->core.im, default_font_name));
     status->need_free_fontset = True;
   }
+  if (!status->xftdraw) {
+    status->xftdraw = XftDrawCreate(ic->core.im->core.display,
+                                    (Drawable) status->window,
+                                    DefaultVisual(ic->core.im->core.display, 
+                                    DefaultScreen(ic->core.im->core.display)),
+                                    DefaultColormap(ic->core.im->core.display, 
+                                    DefaultScreen(ic->core.im->core.display)));
+  }
+  if (!status->xftfont) {
+    status->xftfont = XFactoryCreateDefaultXftFont(ic->core.im->core.display);
+  }
+  status->xftcolor.color.red = 0;
+  status->xftcolor.color.blue = 0;
+  status->xftcolor.color.green = 0;
+  status->xftcolor.color.alpha = 0xffff;
+
   return;
 }
 
@@ -606,6 +640,16 @@
     XFactoryFreeDefaultFontSet (ic->core.im->core.display);
     status->need_free_fontset = False;
   }
+
+  if (status->xftdraw != NULL) {
+    XftDrawDestroy(status->xftdraw);
+    status->xftdraw = NULL;
+  }
+  if (status->xftfont != NULL) {
+    XFactoryFreeDefaultXftFont(ic->core.im->core.display);
+    status->xftfont = NULL;
+  }
+
   _XUnregisterFilter(ic->core.im->core.display, status->window,
 		     RepaintStatus, (XPointer)ic);
 #if defined(USE_FILTER_KEY_PRESS_IN_STATUS)
diff -ruN im-sdk-trunk-svn2174.orig/iiimxcf/xiiimp.so/iiimp/guiIMSts.h im-sdk-trunk-svn2174/iiimxcf/xiiimp.so/iiimp/guiIMSts.h
--- im-sdk-trunk-svn2174.orig/iiimxcf/xiiimp.so/iiimp/guiIMSts.h	2005-01-31 15:31:44.000000000 +0900
+++ im-sdk-trunk-svn2174/iiimxcf/xiiimp.so/iiimp/guiIMSts.h	2005-02-08 15:29:16.433256547 +0900
@@ -43,6 +43,7 @@
 #define _guiIM_STS_h
 
 #include "guiIM.h"
+#include <X11/Xft/Xft.h>
 
 typedef void (*StatusCB)(XicCommon, XPointer);
 
@@ -53,6 +54,9 @@
   GC		rgc;
 #endif
   XFontSet	fontset;
+  XftDraw       *xftdraw;
+  XftFont       *xftfont;
+  XftColor      xftcolor;
   Bool		need_free_fontset;
   XIMText	text;
   IMFeedbackList  *feedback;
diff -ruN im-sdk-trunk-svn2174.orig/iiimxcf/xiiimp.so/iiimp/xfactory.c im-sdk-trunk-svn2174/iiimxcf/xiiimp.so/iiimp/xfactory.c
--- im-sdk-trunk-svn2174.orig/iiimxcf/xiiimp.so/iiimp/xfactory.c	2005-01-31 15:31:44.000000000 +0900
+++ im-sdk-trunk-svn2174/iiimxcf/xiiimp.so/iiimp/xfactory.c	2005-02-08 15:29:16.434256417 +0900
@@ -46,6 +46,7 @@
 #endif
 #include "guiIM.h"
 #include "xfactory.h"
+#include <X11/Xft/Xft.h>
 
 #define PROP_WM_STATE_ELEMENTS 2
 
@@ -477,6 +478,46 @@
   return default_fontset;
 }
 
+static XftFont *default_xftfont = NULL;
+static int ref_xftfont_count = 0;
+
+XftFont*
+XFactoryCreateDefaultXftFont (Display *display)
+{
+  FcPattern *xfp, *match;
+  FcResult *result;
+
+  ref_xftfont_count ++ ;
+
+  if (default_xftfont != NULL){
+    return default_xftfont;
+  }
+
+  xfp = FcPatternCreate ();
+  FcPatternAddString(xfp, XFT_FAMILY, "sans-serif");
+  match = XftFontMatch(display, DefaultScreen(display), xfp, result);
+
+  default_xftfont = XftFontOpenPattern(display, match);
+
+  if (default_xftfont == NULL) {
+     return NULL;
+  } 
+
+  return default_xftfont;
+}
+
+void 
+XFactoryFreeDefaultXftFont (Display *display)
+{
+  if (ref_xftfont_count-- == 0)
+    {
+      if (default_xftfont)
+	XftFontClose (display, default_xftfont);
+      default_xftfont = NULL;
+    }
+  return;
+}
+
 void
 XFactoryFreeDefaultFontSet(Display *display)
 {
diff -ruN im-sdk-trunk-svn2174.orig/iiimxcf/xiiimp.so/iiimp/xfactory.h im-sdk-trunk-svn2174/iiimxcf/xiiimp.so/iiimp/xfactory.h
--- im-sdk-trunk-svn2174.orig/iiimxcf/xiiimp.so/iiimp/xfactory.h	2005-01-31 15:31:44.000000000 +0900
+++ im-sdk-trunk-svn2174/iiimxcf/xiiimp.so/iiimp/xfactory.h	2005-02-08 15:29:16.434256417 +0900
@@ -47,6 +47,8 @@
 #ifndef _XFACTORY_H
 #define _XFACTORY_H
 
+#include <X11/Xft/Xft.h>
+
 extern void	XFactoryRemoveDecoration(Display *display, Window window);
 extern void	XFactoryRemoveDecorationExceptTitle(Display *display,
 						    Window window);
@@ -85,4 +87,6 @@
 extern Bool     XFactoryCheckIMWindow(Display* display, Window window);
 extern int      XFactoryValidateCoordinates(Display * display, Window w,
 					    int *x, int *y);
+extern XftFont *XFactoryCreateDefaultXftFont (Display *display);
+extern void XFactoryFreeDefaultXftFont (Display *display);
 #endif /* !_XFACTORY_H */
