diff -ur sjxa-1.6.14/Sj3wc.c sjxa-1.6.14-gentoo/Sj3wc.c
--- sjxa-1.6.14/Sj3wc.c	Tue Feb 27 14:43:52 1996
+++ sjxa-1.6.14-gentoo/Sj3wc.c	Sun Jan  8 17:08:50 2006
@@ -190,7 +190,7 @@
     *dou = (struct douon_wcs *)realloc( *dou,
 					(n+2) * sizeof(struct douon_wcs) );
     (*dou)[n].dlen = wslen( kana );
-    (*dou)[n].width = wcswidth( kana );
+    (*dou)[n].width = sj3wcswidth( kana );
     (*dou)[n].ddata = (wchar_t *)malloc( sizeof(wchar_t) * ((*dou)[n].dlen+1) );
     wscpy( (*dou)[n].ddata, kana );
     (*dou)[n+1].dlen = 0;
@@ -244,7 +244,7 @@
 					sizeof(struct douon_wcs) )) == NULL )
 		done();
 	    (*dou_wc)[0].dlen = wslen( yomi );
-	    (*dou_wc)[0].width = wcswidth( yomi );
+	    (*dou_wc)[0].width = sj3wcswidth( yomi );
 	    (*dou_wc)[0].ddata = (wchar_t *)malloc( sizeof(wchar_t) *
 						    ((*dou_wc)[0].dlen+1) );
 	    if( (*dou_wc)[0].ddata == NULL )
@@ -269,7 +269,7 @@
 					sizeof(struct douon_wcs) )) == NULL )
 	    done();
 	(*dou_wc)[0].dlen = wslen( yomi );
-	(*dou_wc)[0].width = wcswidth( yomi );
+	(*dou_wc)[0].width = sj3wcswidth( yomi );
 	(*dou_wc)[0].ddata = (wchar_t *)malloc( sizeof(wchar_t) *
 						((*dou_wc)[0].dlen+1) );
 	if( (*dou_wc)[0].ddata == NULL )
diff -ur sjxa-1.6.14/SjString.c sjxa-1.6.14-gentoo/SjString.c
--- sjxa-1.6.14/SjString.c	Fri Apr 12 16:12:46 1996
+++ sjxa-1.6.14-gentoo/SjString.c	Sun Jan  8 17:09:32 2006
@@ -501,9 +501,9 @@
 
 int
 #if NeedFunctionPrototypes
-wcswidth( wchar_t *ws )
+sj3wcswidth( wchar_t *ws )
 #else /* NeedFunctionPrototypes */
-wcswidth( ws )
+sj3wcswidth( ws )
     wchar_t	*ws;
 #endif /* NeedFunctionPrototypes */
 {
diff -ur sjxa-1.6.14/SjString.h sjxa-1.6.14-gentoo/SjString.h
--- sjxa-1.6.14/SjString.h	Fri Apr 12 16:00:07 1996
+++ sjxa-1.6.14-gentoo/SjString.h	Sun Jan  8 17:10:11 2006
@@ -97,7 +97,7 @@
 int		 wsncmp __P(( wchar_t *, wchar_t *, int ));
 int		 wslen __P(( wchar_t * ));
 #endif
-int		 wcswidth __P(( wchar_t * ));
+int		 sj3wcswidth __P(( wchar_t * ));
 wchar_t		 kuten2wc __P(( unsigned short ));
 wchar_t		 sjis2wc __P(( unsigned short ));
 wchar_t		 euc2wc __P(( unsigned short ));
