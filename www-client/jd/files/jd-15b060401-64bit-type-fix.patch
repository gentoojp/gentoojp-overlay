diff -u -r jd-15b060401.orig/src/article/articleadmin.cpp jd-15b060401/src/article/articleadmin.cpp
--- jd-15b060401.orig/src/article/articleadmin.cpp	2006-04-01 15:54:42.000000000 +0900
+++ jd-15b060401/src/article/articleadmin.cpp	2006-04-07 00:09:14.000000000 +0900
@@ -81,7 +81,7 @@
         command_arg.command = "open_view";
         command_arg.url = std::string();
 
-        unsigned int i = url.find( ARTICLE_SIGN );
+        size_t i = url.find( ARTICLE_SIGN );
         if( i != std::string::npos ){
 
             std::string url_tmp = url.substr( 0, i );
@@ -91,7 +91,7 @@
             if( url.find( "_RES_", i ) != std::string::npos ){
 
                 i += 5;
-                unsigned int i2 = url.find( "_CENTER_", i );
+                size_t i2 = url.find( "_CENTER_", i );
                 if( i2 == std::string::npos ) continue;
                 std::string str_num = url.substr( i, i2 - i );
                 int center = atol( url.substr( i2+8 ).c_str() );
@@ -105,7 +105,7 @@
             else if( url.find( "_ID_", i ) != std::string::npos ){
 
                 i += 4;
-                unsigned int i2 = url.find( TIME_SIGN, i );
+                size_t i2 = url.find( TIME_SIGN, i );
                 if( i2 == std::string::npos ) continue;
                 std::string str_id = url.substr( i, i2 - i );
                 
@@ -129,7 +129,7 @@
             else if( url.find( "_REF_", i ) != std::string::npos ){
 
                 i += 5;
-                unsigned int i2 = url.find( TIME_SIGN, i );
+                size_t i2 = url.find( TIME_SIGN, i );
                 if( i2 == std::string::npos ) continue;
                 std::string str_ref = url.substr( i, i2 - i );
                 
@@ -141,7 +141,7 @@
             else if( url.find( "_KW_", i ) != std::string::npos ){
 
                 i += 4;
-                unsigned int i2 = url.find( "_OR_", i );
+                size_t i2 = url.find( "_OR_", i );
                 if( i2 == std::string::npos ) continue;
                 std::string str_query = url.substr( i, i2 - i );
                 bool mode_or = atoi( url.substr( i2+4 ).c_str() );
diff -u -r jd-15b060401.orig/src/article/articleviewbase.cpp jd-15b060401/src/article/articleviewbase.cpp
--- jd-15b060401.orig/src/article/articleviewbase.cpp	2006-04-01 15:54:42.000000000 +0900
+++ jd-15b060401/src/article/articleviewbase.cpp	2006-04-07 00:09:41.000000000 +0900
@@ -901,7 +901,7 @@
 
     if( num_from <= m_article->number_load() ){
 
-        unsigned int i;
+        size_t i;
         if( ( i = num.find( "-" ) ) != std::string::npos ) num_to = atol( num.substr( i +1 ).c_str() );
         num_to = MAX( num_to, num_from );
 
diff -u -r jd-15b060401.orig/src/cache.cpp jd-15b060401/src/cache.cpp
--- jd-15b060401.orig/src/cache.cpp	2006-04-01 15:54:40.000000000 +0900
+++ jd-15b060401/src/cache.cpp	2006-04-07 00:10:23.000000000 +0900
@@ -133,7 +133,7 @@
     std::cout << "CACHE::path_board_root " << url << " -> " << url_board << std::endl;
 #endif
 
-    unsigned int i = url_board.find( "://" );
+    size_t i = url_board.find( "://" );
     if( i == std::string::npos ) return std::string();
 
     return CACHE::path_root() + url_board.substr( i + 3 );
@@ -171,7 +171,7 @@
     std::string id_str = id;
 
     // idに拡張子が付いてたら取る
-    unsigned int i = id.find( "." );
+    size_t i = id.find( "." );
     if( i != std::string::npos ) id_str = id.substr( 0, i );
 
     return CACHE::path_article_info_root( url ) + id_str;
@@ -440,7 +440,7 @@
 #endif
     
     // ルートからディレクトリがあるかチェックしていく。無ければ作る
-    unsigned int i = 0;
+    size_t i = 0;
 
     while( ( i = target.find( "/", i ) ) != std::string::npos ){
 
diff -u -r jd-15b060401.orig/src/dbtree/article2chcompati.cpp jd-15b060401/src/dbtree/article2chcompati.cpp
--- jd-15b060401.orig/src/dbtree/article2chcompati.cpp	2006-04-01 15:54:45.000000000 +0900
+++ jd-15b060401/src/dbtree/article2chcompati.cpp	2006-04-07 00:12:05.000000000 +0900
@@ -20,7 +20,7 @@
     assert( ! id().empty() );
 
     // key (idから拡張子を除いたもの)を取得
-    unsigned int i = id().rfind( "." ); // 拡張子は取り除く
+    size_t i = id().rfind( "." ); // 拡張子は取り除く
     if( i != std::string::npos ) set_key( id().substr( 0, i ) );
 
     // key から since 計算
diff -u -r jd-15b060401.orig/src/dbtree/nodetreebase.cpp jd-15b060401/src/dbtree/nodetreebase.cpp
--- jd-15b060401.orig/src/dbtree/nodetreebase.cpp	2006-04-01 15:54:46.000000000 +0900
+++ jd-15b060401/src/dbtree/nodetreebase.cpp	2006-04-07 00:58:05.000000000 +0900
@@ -231,7 +231,7 @@
                 std::string str_num = url.substr( strlen( PROTO_ANCHORE) );
                 int num_from = atol( str_num.c_str() );
                 int num_to = num_from;
-                unsigned int i2;
+                size_t i2;
                 if( ( i2  = str_num.find( "-" ) ) != std::string::npos ) num_to = atol( str_num.substr( i2 +1 ).c_str() );
 
                 const int range = RANGE_REF; // >>1-1000 みたいなアンカーは弾く
diff -u -r jd-15b060401.orig/src/dbtree/root.cpp jd-15b060401/src/dbtree/root.cpp
--- jd-15b060401.orig/src/dbtree/root.cpp	2006-04-01 15:54:47.000000000 +0900
+++ jd-15b060401/src/dbtree/root.cpp	2006-04-07 00:12:24.000000000 +0900
@@ -279,7 +279,7 @@
         std::string& line = (*it);
 
         // カテゴリに入る
-        unsigned int i;
+        size_t i;
         if( ( i = line.find( "<BR><BR><B>" ) ) != std::string::npos ){
 
             if( ! regex.exec( " ?<BR><BR><B>(.*)</B><BR>.*", line ) ) continue;
diff -u -r jd-15b060401.orig/src/image/imageview.cpp jd-15b060401/src/image/imageview.cpp
--- jd-15b060401.orig/src/image/imageview.cpp	2006-03-31 23:25:42.000000000 +0900
+++ jd-15b060401/src/image/imageview.cpp	2006-04-06 23:49:26.000000000 +0900
@@ -29,9 +29,9 @@
 ImageViewMain::ImageViewMain( const std::string& url )
     : ImageViewBase( url )
     , m_scrwin( 0 )
-    , m_show_label( 0 )
     , m_length_prev( 0 )
     , m_show_status( false )
+    , m_show_label( false )
 {
 #ifdef _DEBUG    
     std::cout << "ImageViewMain::ImageViewMain : " << get_url() << std::endl;
@@ -237,7 +237,7 @@
             m_length_prev = get_img()->current_length();
 
             char tmpstr[ 256 ];
-            snprintf( tmpstr, 256, "%d k / %d k", m_length_prev/1024, get_img()->total_length()/1024 );
+            snprintf( tmpstr, 256, "%zd k / %zd k", m_length_prev/1024, get_img()->total_length()/1024 );
             set_status( tmpstr );
 
             // ステータス標示
@@ -274,6 +274,8 @@
     // ドラッグして画像移動するときの起点
     m_x_motion = event->x_root;
     m_y_motion = event->y_root;
+
+    return true;
 }
 
 
diff -u -r jd-15b060401.orig/src/image/imageview.h jd-15b060401/src/image/imageview.h
--- jd-15b060401.orig/src/image/imageview.h	2006-03-31 23:25:42.000000000 +0900
+++ jd-15b060401/src/image/imageview.h	2006-04-06 23:33:32.000000000 +0900
@@ -17,7 +17,7 @@
         Gtk::Label m_label;
         gdouble m_x_motion;
         gdouble m_y_motion;
-        int m_length_prev;
+        size_t m_length_prev;
         bool m_show_status;
         bool m_show_label;
 
diff -u -r jd-15b060401.orig/src/image/imageviewpopup.cpp jd-15b060401/src/image/imageviewpopup.cpp
--- jd-15b060401.orig/src/image/imageviewpopup.cpp	2006-03-31 23:25:42.000000000 +0900
+++ jd-15b060401/src/image/imageviewpopup.cpp	2006-04-06 23:29:33.000000000 +0900
@@ -156,7 +156,7 @@
         m_length_prev = get_img()->current_length();
 
         char tmpstr[ 256 ];
-        snprintf( tmpstr, 256, "%d k / %d k", m_length_prev/1024, get_img()->total_length()/1024 );
+        snprintf( tmpstr, 256, "%zd k / %zd k", m_length_prev/1024, get_img()->total_length()/1024 );
         m_label->set_text( tmpstr );
     }
 }
diff -u -r jd-15b060401.orig/src/image/imageviewpopup.h jd-15b060401/src/image/imageviewpopup.h
--- jd-15b060401.orig/src/image/imageviewpopup.h	2006-04-01 15:54:48.000000000 +0900
+++ jd-15b060401/src/image/imageviewpopup.h	2006-04-06 23:26:45.000000000 +0900
@@ -15,7 +15,7 @@
     {
         Gtk::EventBox* m_event_frame;
         Gtk::Label* m_label;
-        unsigned int m_length_prev;
+        size_t m_length_prev;
 
       public:
 
diff -u -r jd-15b060401.orig/src/jdlib/jdiconv.cpp jd-15b060401/src/jdlib/jdiconv.cpp
--- jd-15b060401.orig/src/jdlib/jdiconv.cpp	2006-03-31 23:25:42.000000000 +0900
+++ jd-15b060401/src/jdlib/jdiconv.cpp	2006-04-05 16:42:01.000000000 +0900
@@ -117,7 +117,7 @@
                 }
 
                 //その他、1文字を空白にして続行
-                snprintf( str_tmp, 256, "iconv EILSEQ left = %d code = %x %x %x", m_byte_left_in, code0, code1, code2 );
+                snprintf( str_tmp, 256, "iconv EILSEQ left = %zd code = %x %x %x", m_byte_left_in, code0, code1, code2 );
                 MISC::ERRMSG( str_tmp );
                 *m_buf_in_tmp = 0x20;
             }
diff -u -r jd-15b060401.orig/src/jdlib/loader.cpp jd-15b060401/src/jdlib/loader.cpp
--- jd-15b060401.orig/src/jdlib/loader.cpp	2006-03-31 23:25:42.000000000 +0900
+++ jd-15b060401/src/jdlib/loader.cpp	2006-04-06 23:42:26.000000000 +0900
@@ -218,7 +218,7 @@
     
     // protocol と host と path 取得
     m_data.url = data_in.url;
-    unsigned long i = m_data.url.find( "://", 0 );  // "http://" とつけるのは呼び出し側の責任で
+    size_t i = m_data.url.find( "://", 0 );  // "http://" とつけるのは呼び出し側の責任で
     if( i == std::string::npos ){
 
         m_data.code = LOADER_CODE_ERR;
@@ -229,7 +229,7 @@
     i += 3;
     m_data.protocol = data_in.url.substr( 0, i );
 
-    unsigned long i2 = m_data.url.find( "/", i );
+    size_t i2 = m_data.url.find( "/", i );
     if( i2 == std::string::npos ){
 
         m_data.code = LOADER_CODE_ERR;
diff -u -r jd-15b060401.orig/src/jdlib/miscutil.cpp jd-15b060401/src/jdlib/miscutil.cpp
--- jd-15b060401.orig/src/jdlib/miscutil.cpp	2006-04-01 15:54:49.000000000 +0900
+++ jd-15b060401/src/jdlib/miscutil.cpp	2006-04-07 00:14:36.000000000 +0900
@@ -16,7 +16,9 @@
 std::list< std::string > MISC::get_lines( const std::string& str, bool rm_space ){
         
     std::list< std::string > lines;
-    unsigned int i = 0,i2 = 0, r = 0;
+    size_t i = 0, i2 = 0;
+    int r = 0;
+
     while ( ( i2 = str.find( "\n", i ) ) != std::string::npos ){
         r = 0;
         if( str[ i2 - 1 ] == '\r' ) r = 1;
@@ -49,7 +51,7 @@
 #endif 
    
     std::list< std::string > lists;
-    int pos = 0, length = 0;
+    size_t pos = 0, length = 0;
     std::string str2 = remove_space( str );
     const char* data = str2.c_str();
     if( data[ 0 ] != '(' ) return lists;
@@ -110,7 +112,7 @@
 std::list< std::string > MISC::split_line( const std::string& str )
 {
     std::string str_space = "　";
-    int lng_space = str_space.length();
+    size_t lng_space = str_space.length();
     bool dquote;
 
     std::list< std::string > list_str;
@@ -141,7 +143,7 @@
 
         // 空白か " を探す
         i2 = i;
-        int lng_tmp = 1;
+        size_t lng_tmp = 1;
         while( i2 < lng ){
 
             // " 発見( \"は除く )
@@ -179,10 +181,10 @@
 std::string MISC::remove_space( const std::string& str )
 {
     std::string str_space = "　";
-    int lng_space = str_space.length();
+    size_t lng_space = str_space.length();
 
     std::string str_out;
-    int lng = str.length();
+    size_t lng = str.length();
     
     if( lng == 0 ) return str;
     if( str.find( " " ) == std::string::npos ) return str;
@@ -202,7 +204,7 @@
     }
 
     // 後
-    int i2 = lng -1;
+    size_t i2 = lng -1;
     while( 1 ){
 
         // 半角
@@ -227,10 +229,10 @@
 //
 std::string MISC::cut_str( const std::string& str, const std::string& str1, const std::string& str2 )
 {
-    unsigned int i = str.find( str1 );
+    size_t i = str.find( str1 );
     if( i == std::string::npos ) return std::string();
     i += str1.length();
-    unsigned int i2 = str.find( str2, i );
+    size_t i2 = str.find( str2, i );
     if( i2 == std::string::npos ) return std::string();
     
     return str.substr( i, i2 - i );
@@ -241,7 +243,7 @@
 std::string MISC::replace_str( const std::string& str, const std::string& str1, const std::string& str2 )
 {
     std::string str_out;
-    unsigned int i, pos = 0;
+    size_t i, pos = 0;
     while( ( i = str.find( str1 , pos ) ) != std::string::npos ){
 
         str_out += str.substr( pos, ( i - pos ) ) + str2;
@@ -486,7 +488,7 @@
 std::string MISC::toupper_str( const std::string& str )
 {
     std::string str_out;
-    for( unsigned int i = 0; i < str.length() ; ++i ) str_out += toupper( str[ i ] );
+    for( size_t i = 0; i < str.length() ; ++i ) str_out += toupper( str[ i ] );
 
     return str_out;
 }
@@ -513,7 +515,7 @@
 {
     std::string str_out;
 
-    for( unsigned int i = 0; i < str.length() ; ++i ) str_out += tolower( str[ i ] );
+    for( size_t i = 0; i < str.length() ; ++i ) str_out += tolower( str[ i ] );
 
     return str_out;
 }
@@ -526,7 +528,7 @@
 std::string MISC::get_hostname( const std::string& path )
 {
     if( path.find( "http://" ) == std::string::npos ) return std::string();
-    unsigned int i = path.find( "/", strlen( "http://" ) ); 
+    size_t i = path.find( "/", strlen( "http://" ) ); 
     if( i == std::string::npos ) return std::string();
 
     return path.substr( 0, i );
@@ -541,7 +543,7 @@
 {
     if( path.empty() ) return std::string();
 
-    unsigned int i = path.rfind( "/" );
+    size_t i = path.rfind( "/" );
     if( i == std::string::npos ) return path;
 
     return path.substr( i+1 );
@@ -556,7 +558,7 @@
 {
     if( path.empty() ) return std::string();
 
-    unsigned int i = path.rfind( "/" );
+    size_t i = path.rfind( "/" );
     if( i == std::string::npos ) return std::string();
 
     return path.substr( 0, i+1 );
